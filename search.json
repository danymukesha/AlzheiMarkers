[{"path":"https://danymukesha.github.io/AlzheiMarkers/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Dany Mukesha Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"Alzheimer’s disease (AD) progressive neurodegenerative disorder affects millions people worldwide. Early diagnosis differentiation healthy aging remain critical challenges field. Metabolomic biomarkers present promising avenue addressing challenges providing insights metabolic changes associated AD (Jia et al. 2021). article introduces AlzheiMarkers R package, facilitates analysis evaluation metabolomic biomarkers distinguishing Alzheimer’s Disease (AD) patients Healthy Controls (HC). package includes functions data preparation, model training, evaluation, visualization biomarker importance model performance ROC curves.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"keywords","dir":"Articles","previous_headings":"","what":"Keywords","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"Alzheimer’s Disease, Metabolomics, Biomarkers, Machine Learning, R Package, Random Forest, XGBoost","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"Alzheimer’s disease (AD) common cause dementia, accounting estimated 60-80% cases. Despite extensive research, AD diagnosis still relies largely clinical evaluation neuroimaging, often identifying disease relatively advanced stage. Metabolomics, study metabolites biological samples, emerged novel tool biomarker discovery AD. Numerous studies suggest metabolic dysregulation plays critical role AD pathogenesis. AlzheiMarkers R package developed support analysis metabolomic data discovery potential biomarkers Alzheimer’s disease. package allows users efficiently load preprocess datasets, split data training testing sets, train machine learning models, visualize model performance. integrates widely used machine learning algorithms distinguish AD patients Healthy Controls (HC).","code":""},{"path":[]},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"package-overview","dir":"Articles","previous_headings":"2. Materials and Methods","what":"2.1 Package Overview","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"AlzheiMarkers package contains multiple functions streamline workflow data preparation model evaluation visualization. primary goals package facilitate metabolomic biomarker analysis enable exploration classification models differentiating AD HC samples.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"data-preparation","dir":"Articles","previous_headings":"2. Materials and Methods","what":"2.2 Data Preparation","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"first step involves data preparation, raw data imported separated two groups: AD patients HC. prepare_data() function reads CSV file returns full dataset, alongside separated subsets AD HC.","code":"prepare_data <- function(file_path) {   data <- data.table::fread(file_path)   data <- as.data.frame(data)   HC <- dplyr::filter(data, Cohort == \"HC\")   AD <- dplyr::filter(data, Cohort == \"AD\")      list(     data = data,     HC = HC,     AD = AD   ) }"},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"data-splitting","dir":"Articles","previous_headings":"2. Materials and Methods","what":"2.3 Data Splitting","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"data prepared, split training test sets using split_data() function. function provides flexibility defining ratio dataset used training.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"model-training","dir":"Articles","previous_headings":"2. Materials and Methods","what":"2.4 Model Training","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"AlzheiMarkers package supports training multiple machine learning models, including Lasso regression, Random Forest, Naive Bayes, Partial Least Squares (PLS), XGBoost. model trained using cross-validation user-specified parameters. train_models() function integrates caret package, powerful tool building tuning machine learning models (Kuhn 2008).","code":"train_models <- function(train_data, n_cv = 10, n_repeat = 10) {   set.seed(123)   control <- caret::trainControl(     method = \"repeatedcv\",     number = n_cv,     repeats = n_repeat,     classProbs = TRUE,     summaryFunction = caret::twoClassSummary   )      predictors <- train_data %>% dplyr::select(-Cohort)   response <- train_data$Cohort      models <- list(     lasso = caret::train(x = predictors, y = response,                          method = \"glmnet\", metric = \"ROC\",                           trControl = control),     rf = caret::train(x = predictors, y = response,                        method = \"rf\", metric = \"ROC\",                        trControl = control),     nb = caret::train(x = predictors, y = response,                        method = \"naive_bayes\", metric = \"ROC\",                        trControl = control),     pls = caret::train(x = predictors, y = response,                         method = \"pls\", metric = \"ROC\",                         trControl = control),     xgb = caret::train(x = predictors, y = response,                         method = \"xgbTree\", metric = \"ROC\",                         trControl = control)   )      models }"},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"model-evaluation-and-visualization","dir":"Articles","previous_headings":"2. Materials and Methods","what":"2.5 Model Evaluation and Visualization","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"models trained, performance can evaluated using evaluate_models() function, provides various evaluation metrics Area ROC Curve (AUC). addition, package includes plot_roc_curves() function visualize ROC curves model plot_variable_importance() plot important variables driving predictions.","code":"plot_roc_curves <- function(eval_results) {   ggplot2::ggplot(eval_results$roc, ggplot2::aes(x = 1 - Specificity,                                                   y = Sensitivity,                                                   color = Model)) +     ggplot2::geom_line() +     ggplot2::geom_abline(intercept = 0, slope = 1, linetype = \"dashed\") +     ggplot2::theme_minimal() +     ggplot2::labs(title = \"ROC Curves for Different Models\") }"},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"package-vignette","dir":"Articles","previous_headings":"2. Materials and Methods","what":"2.6 Package Vignette","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"vignette provided package guide users typical analysis workflow, including data preparation, model training, visualization.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"results","dir":"Articles","previous_headings":"","what":"3. Results","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"Using AlzheiMarkers package, users can efficiently train evaluate multiple machine learning models identify potential biomarkers. visualizing ROC curves, users can determine models provide highest diagnostic accuracy distinguishing AD HC samples. variable importance plots offer insights influential biomarkers.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"discussion","dir":"Articles","previous_headings":"","what":"4. Discussion","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"AlzheMarkers package provides user-friendly interface conducting biomarker discovery machine learning-based classification context Alzheimer’s Disease. package supports several common machine learning methods, can expanded include additional techniques functionalities feature selection, ensemble modeling, deep learning approaches.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/articles/AlzheiMarkers.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"5. Conclusion","title":"AlzheiMarkers: Analyzing Alzheimer's Biomarkers with Machine Learning","text":"AlzheiMarkers R package tool analyzing metabolomic biomarkers differentiating AD patients healthy controls using machine learning techniques. providing functions data preparation, model training, evaluation, visualization, simplifies biomarker discovery process Alzheimer’s research.","code":""},{"path":[]},{"path":"https://danymukesha.github.io/AlzheiMarkers/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dany Mukesha. Author, maintainer.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mukesha D (2024). AlzheiMarkers: Analyze Metabolomic Biomarkers Alzheimer's Disease. R package version 0.2.1, https://danymukesha.github.io/AlzheiMarkers/.","code":"@Manual{,   title = {AlzheiMarkers: Analyze Metabolomic Biomarkers for Alzheimer's Disease},   author = {Dany Mukesha},   year = {2024},   note = {R package version 0.2.1},   url = {https://danymukesha.github.io/AlzheiMarkers/}, }"},{"path":[]},{"path":"https://danymukesha.github.io/AlzheiMarkers/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analyze Metabolomic Biomarkers for Alzheimer's Disease","text":"AlzheiMarkers package provides tools analyze metabolomic biomarkers distinguishing Alzheimer’s Disease (AD) patients Healthy Controls (HC). offers functionalities data preparation, machine learning model training, model evaluation, visualization results, making toolkit biomarker analysis Alzheimer’s research.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Analyze Metabolomic Biomarkers for Alzheimer's Disease","text":"Data preparation: Functions load, preprocess, split data training test sets. Model training: Supports multiple machine learning models including Random Forest, Lasso, XGBoost, Naive Bayes, Partial Least Squares (PLS). Evaluation: Model performance evaluation using ROC curves cross-validation. Visualization: Tools plotting ROC curves variable importance across different models.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Analyze Metabolomic Biomarkers for Alzheimer's Disease","text":"","code":"library(AlzheiMarkers) data <- prepare_data(\"path/to/data.csv\") # Prepare data split_data <- split_data(data)  models <- train_models(split_data$train) # Train models  eval_results <- evaluate_models(models) # Evaluate models plot_roc_curves(eval_results$eval_results)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/AlzheiMarkers-package.html","id":null,"dir":"Reference","previous_headings":"","what":"AlzheiMarkers: Analyze Metabolomic Biomarkers for Alzheimer's Disease — AlzheiMarkers-package","title":"AlzheiMarkers: Analyze Metabolomic Biomarkers for Alzheimer's Disease — AlzheiMarkers-package","text":"package provides tools analyzing metabolomic biomarkers distinguish Alzheimer's Disease (AD) patients Healthy Controls (HC). includes functions data preparation, model training, evaluation, visualization results.","code":""},{"path":[]},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/AlzheiMarkers-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AlzheiMarkers: Analyze Metabolomic Biomarkers for Alzheimer's Disease — AlzheiMarkers-package","text":"Maintainer: Dany Mukesha danymukesha@gmail.com (ORCID)","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/calculate_variable_importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Variable Importance — calculate_variable_importance","title":"Calculate Variable Importance — calculate_variable_importance","text":"function calculates returns variable importance model.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/calculate_variable_importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Variable Importance — calculate_variable_importance","text":"","code":"calculate_variable_importance(models)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/calculate_variable_importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Variable Importance — calculate_variable_importance","text":"models List trained models train_models().","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/calculate_variable_importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Variable Importance — calculate_variable_importance","text":"list data frames containing variable importance model.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/evaluate_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Model Performance — evaluate_models","title":"Evaluate Model Performance — evaluate_models","text":"function evaluates performance trained models using various metrics.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/evaluate_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Model Performance — evaluate_models","text":"","code":"evaluate_models(models)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/evaluate_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Model Performance — evaluate_models","text":"models List trained models train_models().","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/evaluate_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate Model Performance — evaluate_models","text":"list containing performance metrics plots.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_roc_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ROC Curves — plot_roc_curves","title":"Plot ROC Curves — plot_roc_curves","text":"function plots ROC curves trained models.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_roc_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ROC Curves — plot_roc_curves","text":"","code":"plot_roc_curves(eval_results)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_roc_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ROC Curves — plot_roc_curves","text":"eval_results Evaluation results evaluate_models().","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_roc_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ROC Curves — plot_roc_curves","text":"ggplot object containing ROC curves.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_variable_importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Variable Importance — plot_variable_importance","title":"Plot Variable Importance — plot_variable_importance","text":"function plots variable importance specified model.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_variable_importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Variable Importance — plot_variable_importance","text":"","code":"plot_variable_importance(var_imp, model_name)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_variable_importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Variable Importance — plot_variable_importance","text":"var_imp Variable importance results calculate_variable_importance(). model_name Name model plot.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/plot_variable_importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Variable Importance — plot_variable_importance","text":"ggplot object containing variable importance plot.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Data for Alzheimer's Biomarker Analysis — prepare_data","title":"Prepare Data for Alzheimer's Biomarker Analysis — prepare_data","text":"function loads prepares data analysis, separating Alzheimer's Disease (AD) Healthy Control (HC) groups.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Data for Alzheimer's Biomarker Analysis — prepare_data","text":"","code":"prepare_data(file_path)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Data for Alzheimer's Biomarker Analysis — prepare_data","text":"file_path Character string specifying path CSV file.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Data for Alzheimer's Biomarker Analysis — prepare_data","text":"list containing prepared data relevant information.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/split_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Data into Training and Test Sets — split_data","title":"Split Data into Training and Test Sets — split_data","text":"function splits prepared data training test sets.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/split_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Data into Training and Test Sets — split_data","text":"","code":"split_data(prepared_data, train_ratio = 0.7)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/split_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Data into Training and Test Sets — split_data","text":"prepared_data List containing prepared data prepare_data(). train_ratio Numeric value 0 1 specifying ratio training data.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/split_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Data into Training and Test Sets — split_data","text":"list containing training test datasets.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/train_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Train Multiple Machine Learning Models — train_models","title":"Train Multiple Machine Learning Models — train_models","text":"function trains multiple machine learning models provided data.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/train_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train Multiple Machine Learning Models — train_models","text":"","code":"train_models(train_data, n_cv = 10, n_repeat = 10)"},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/train_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train Multiple Machine Learning Models — train_models","text":"train_data Training data frame. n_cv Number cross-validation folds. n_repeat Number repetitions cross-validation.","code":""},{"path":"https://danymukesha.github.io/AlzheiMarkers/reference/train_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train Multiple Machine Learning Models — train_models","text":"list trained models.","code":""}]
